175. Combine Two Tables
//
select firstName,lastName,city,state from person p
left join address a
on p.personId=a.personId 

181. Employees Earning More Than Their Managers
//
select e1.name as Employee from Employee e1
join Employee e2
on e2.id=e1.managerId 
where e2.salary < e1.salary

182. Duplicate Emails
//
select email as Email from person  
group by email
having count(email)>1

183. Customers Who Never Order
select name as Customers from Customers 
where id not in(select customerId from Orders)

196. Delete Duplicate Emails
//
delete from person
where id not in(select min(id) from person group by email)

197. Rising Temperature
//
select w1.id from Weather w1,Weather w2
where w2.recordDate = dateadd(day,-1,w1.recordDate)
and w2.temperature < w1.temperature 

511. Game Play Analysis I
//
select  player_id,min(event_date) as first_login  from Activity
group by player_id

577. Employee Bonus
//
select e.name,b.bonus from Employee e
left join Bonus b
on e.empId=b.empId 
where b.bonus < 1000 or b.bonus is null 

584. Find Customer Referee
//
select name from Customer 
where referee_id <>2 or referee_id is null

586. Customer Placing the Largest Number of Orders
//
select top 1 customer_number from Orders 
group by customer_number 
order by count((customer_number)) desc

595. Big Countries
//
select name, population,area from World
where area>=3000000 or population >=25000000

596. Classes More Than 5 Students
//
select class from Courses 
group by class
having count(student)>5

1661. Average Time of Process per Machine
//
select a1.machine_id ,round(avg(a2.timestamp -a1.timestamp ),3) as processing_time 
from Activity a1
inner join Activity a2
on a1.process_id =a2.process_id 
and a1.machine_id=a2.machine_id 
and a2.timestamp >a1.timestamp 
group by a1.machine_id 

1934. Confirmation Rate
//
select s.user_id,round(cast(count(case when action='confirmed' then 1 else null end)as float)/count(*),2) as confirmation_rate 
 from Signups s
left join Confirmations c
on s.user_id =c.user_id 
group by s.user_id

570. Managers with at Least 5 Direct Reports
//
select e1.name from Employee e1
inner join Employee e2
on e1.id=e2.managerId 
group by e1.name
having count(e2.managerId)>=5

1251. Average Selling Price
//
select p.product_id,round(cast(sum(p.price*u.units)as float)/sum(u.units) ,2) as average_price
from Prices p
inner join UnitsSold u
on p.product_id=u.product_id
and purchase_date between start_date and end_date
group by p.product_id

1075. Project Employees I
//
select p.project_id,round(avg(cast(e.experience_years as decimal)),2) 
as average_years from Project p
inner join Employee e
on e.employee_id=p.employee_id
group by p.project_id

1633. Percentage of Users Attended a Contest
//
select contest_id, round(count(r.contest_id)*100.00/(select count(*) from users),2) percentage 
from Register r
group by contest_id 
order by percentage desc, contest_id asc;

-1211. Queries Quality and Percentage
///
select query_name,round(sum(rating*1.0/position)/count(*),2) as quality,
round(sum(case when rating<3 then 1 else 0 end) *100.0/count(*) ,2) as poor_query_percentage
from Queries 
group by query_name 

1141. User Activity for the Past 30 Days I
////
SELECT activity_date AS day,COUNT(DISTINCT user_id) AS active_users
FROM Activity
WHERE activity_date between '2019-06-28' AND '2019-07-27'
GROUP BY activity_date;


596. Classes More Than 5 Students
///
select class from Courses 
group by class
having count(student)>=5

1729. Find Followers Count
////
select user_id,count(follower_id )as followers_count from Followers
group by user_id

619. Biggest Single Number
///
select max(num) as num from MyNumbers
where num in(select max(num)as num from MyNumbers
group by num
having count(*)=1)

176. Second Highest Salary
///
select  max(salary)  as SecondHighestSalary from Employee
where salary not in(select max(salary) from Employee)

1527. Patients With a Condition
///
select * from Patients where conditions like '% DIAB1%' or conditions like 'DIAB1%'

2356. Number of Unique Subjects Taught by Each Teacher
///
select teacher_id  ,count(distinct subject_id  )as cnt from Teacher
group by teacher_id

1517. Find Users With Valid E-Mails
///
select * from Users where mail like'[a-zA-Z]%@leetcode.com'
and mail not like'%[^a-zA-Z0-9_.-]%@leetcode.com'

1327. List the Products Ordered in a Period
///
select P.product_name,sum(unit) as unit from Products p 
inner join Orders o 
on o.product_id=p.product_id 
where month(o.order_date)=2 and year(o.order_date)='2020'
group by P.product_name       
having sum(o.unit)>=100

1731. The Number of Employees Which Report to Each Employee
///
select e1.employee_id,e1.name,count(e2.reports_to) as reports_count,
round(avg(e2.age*1.00),0) as average_age  
from Employees e1 join Employees e2
on e1.employee_id=e2.reports_to
group by e1.employee_id,e1.name
having count(e2.reports_to)>=1
order by e1.employee_id

1070. Product Sales Analysis III
///
select product_id ,(year) as first_year,quantity,price from(
select product_id ,year,quantity,price,rank()over(partition by product_id order by year)as dr from Sales
)as t where dr=1

1045. Customers Who Bought All Products
///
select customer_id from Customer 
group by customer_id
having count(distinct(product_key))=(select count(distinct(product_key))from product)


1978. Employees Whose Manager Left the Company
///
select employee_id from Employees where salary <30000 and manager_id not in(select employee_id from Employees)
order by employee_id


610. Triangle Judgement
///
select *,case
when x+y>z and z+x>y and z+y>x then 'Yes'
else 'No' end as triangle 
  from Triangle

178. Rank Scores
///
select score,dense_rank()over(order by score desc)as rank 
from Scores 

184. Department Highest Salary
///
select Department,Employee,Salary from
(
    select e.id,d.name as Department,e.name as Employee ,e.salary as Salary ,rank()over(partition by d.name order by e.salary desc) as Rank
   from  Employee e,Department d
    where e.departmentId =d.id) as th 
    where Rank=1
